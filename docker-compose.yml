---

services:
  app:
    build:
      args:
        user: laravel
        uid: 1000
      context: ./
      dockerfile: Dockerfile
    image: laravel
    container_name: laravel-app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./SRC_FOLDER:/var/www
    networks:
      - laravel
#    depends_on:
#      - mysql
#      - init
#    command: php-fpm # Ensures the main container runs PHP after the init tasks are done

  mysql:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    container_name: laravel-mysql
    restart: unless-stopped
    tty: true
    ports:
      - 55555:3306
    volumes:
      - ./docker-compose/mysql/my.cnf:/etc/mysql/my.cnf
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
#      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
#    volumes:
#      - ./docker-compose/mysql:/docker-entrypoint-initdb.d
    networks:
      - laravel

  nginx:
    image: nginx:stable-alpine
    container_name: laravel-nginx
    restart: unless-stopped
    ports:
      - 8000:80
    volumes:
      - ./SRC_FOLDER:/var/www
      - ./docker-compose/nginx:/etc/nginx/conf.d/
    networks:
      - laravel

  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-php
    volumes:
      - ./SRC_FOLDER:/var/www
      - ./docker-compose/php/php.ini:/usr/local/etc/php/conf.d/local.ini
#      - ./docker-compose/php/php.ini:/usr/local/etc/php.ini

    ports:
      - 9000:9000
    networks:
      - laravel

  adminer_container:
    image: adminer:latest
    container_name: laravel-adminer
    environment:
      ADMINER_DEFAULT_SERVER: mysql
#      ADMINER_DESIGN: galkaev
    ports:
      - 4444:8080
    networks:
      - laravel

  phpmyadmin:
    depends_on:
      - mysql
    image: phpmyadmin/phpmyadmin
    container_name: laravel-phpmyadmin
    restart: always
    ports:
      - 4442:80
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}

    networks:
      - laravel
#
#  init:
#    image: laravel
#    container_name: laravel-init
#    depends_on:
#      - mysql
#    working_dir: /var/www
#    volumes:
#      - ./SRC_FOLDER:/var/www
#    networks:
#      - laravel
#    entrypoint: >
#      sh -c "
#      echo 'Database is ready!';
#      composer install &&
#      php artisan migrate --no-interaction --force &&
#      echo 'Initialization complete!';
#      exit 0;
#      "
#    restart: "no" # Ensure this container exits after running the tasks

networks:
  laravel:
    driver: bridge
